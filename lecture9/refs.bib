@inproceedings{opq,
  author       = {Zahra Jafargholi and
                  Kasper Green Larsen and
                  Mark Simkin},
  editor       = {D{\'{a}}niel Marx},
  title        = {Optimal Oblivious Priority Queues},
  booktitle    = {Proceedings of the 2021 {ACM-SIAM} Symposium on Discrete Algorithms,
                  {SODA} 2021, Virtual Conference, January 10 - 13, 2021},
  pages        = {2366--2383},
  publisher    = {{SIAM}},
  year         = {2021},
}

@inproceedings{pathoheap,
  author       = {Elaine Shi},
  title        = {Path Oblivious Heap: Optimal and Practical Oblivious Priority Queue},
  booktitle    = {2020 {IEEE} Symposium on Security and Privacy, {SP} 2020, San Francisco,
                  CA, USA, May 18-21, 2020},
  pages        = {842--858},
  publisher    = {{IEEE}},
  year         = {2020},
}

@misc{tianyao-sort,
      author = {Tianyao Gu and Yilei Wang and Bingnan Chen and Afonso Tinoco and Elaine Shi and Ke Yi},
      title = {Efficient Oblivious Sorting and Shuffling for Hardware Enclaves},
      howpublished = {Cryptology ePrint Archive, Paper 2023/1258},
      year = {2023},
      note = {\url{https://eprint.iacr.org/2023/1258}},
      url = {https://eprint.iacr.org/2023/1258}
}

@inproceedings{optorama,
  author       = {Gilad Asharov and
                  Ilan Komargodski and
                  Wei{-}Kai Lin and
                  Kartik Nayak and
                  Enoch Peserico and
                  Elaine Shi},
  title        = {OptORAMa: Optimal Oblivious {RAM}},
  booktitle    = {Advances in Cryptology - {EUROCRYPT} 2020 - 39th Annual International
                  Conference on the Theory and Applications of Cryptographic Techniques,
                  Zagreb, Croatia, May 10-14, 2020, Proceedings, Part {II}},
  series       = {Lecture Notes in Computer Science},
  volume       = {12106},
  pages        = {403--432},
  publisher    = {Springer},
  year         = {2020},
}

@inproceedings{domulticore,
  author       = {Vijaya Ramachandran and
                  Elaine Shi},
  title        = {Data Oblivious Algorithms for Multicores},
  booktitle    = {{SPAA} '21: 33rd {ACM} Symposium on Parallelism in Algorithms and
                  Architectures, Virtual Event, USA, 6-8 July, 2021},
  pages        = {373--384},
  publisher    = {{ACM}},
  year         = {2021},
}

@inproceedings{AKS,
author = {Ajtai, M. and Koml\'{o}s, J. and Szemer\'{e}di, E.},
title = {An 0(n log n) sorting network},
year = {1983},
isbn = {0897910990},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800061.808726},
doi = {10.1145/800061.808726},
abstract = {The purpose of this paper is to describe a sorting network of size 0(n log n) and depth 0(log n).A natural way of sorting is through consecutive halvings: determine the upper and lower halves of the set, proceed similarly within the halves, and so on. Unfortunately, while one can halve a set using only 0(n) comparisons, this cannot be done in less than log n (parallel) time, and it is known that a halving network needs (½)n log n comparisons.It is possible, however, to construct a network of 0(n) comparisons which halves in constant time with high accuracy. This procedure (ε-halving) and a derived procedure (ε-nearsort) are described below, and our sorting network will be centered around these elementary steps.},
booktitle = {Proceedings of the Fifteenth Annual ACM Symposium on Theory of Computing},
pages = {1–9},
numpages = {9},
series = {STOC '83}
}


@inbook{Bucket,
author = {Gilad Asharov and T-H. Hubert Chan and Kartik Nayak and Rafael Pass and Ling Ren and Elaine Shi},
title = {Bucket Oblivious Sort: An Extremely Simple Oblivious Sort},
booktitle = {Symposium on Simplicity in Algorithms (SOSA)},
chapter = {},
pages = {8-14},
doi = {10.1137/1.9781611976014.2},
URL = {https://epubs.siam.org/doi/abs/10.1137/1.9781611976014.2},
eprint = {https://epubs.siam.org/doi/pdf/10.1137/1.9781611976014.2},
    abstract = { We propose a conceptually simple oblivious sort and oblivious random permutation algorithms called bucket oblivious sort and bucket oblivious random permutation. Bucket oblivious sort uses 6n log n time (measured by the number of memory accesses) and 2Z client storage with an error probability exponentially small in Z. The above runtime is only 3× slower than a non-oblivious merge sort baseline; for 230 elements, it is 5× faster than bitonic sort, the de facto oblivious sorting algorithm in practical implementations. }
}


@inproceedings{Batcher,
author = {Batcher, K. E.},
title = {Sorting networks and their applications},
year = {1968},
isbn = {9781450378970},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1468075.1468121},
doi = {10.1145/1468075.1468121},
abstract = {To achieve high throughput rates today's computers perform several operations simultaneously. Not only are I/O operations performed concurrently with computing, but also, in multiprocessors, several computing operations are done concurrently. A major problem in the design of such a computing system is the connecting together of the various parts of the system (the I/O devices, memories, processing units, etc.) in such a way that all the required data transfers can be accommodated. One common scheme is a high-speed bus which is time-shared by the various parts; speed of available hardware limits this scheme. Another scheme is a cross-bar switch or matrix; limiting factors here are the amount of hardware (an m \texttimes{} n matrix requires m \texttimes{} n cross-points) and the fan-in and fan-out of the hardware.},
booktitle = {Proceedings of the April 30--May 2, 1968, Spring Joint Computer Conference},
pages = {307–314},
numpages = {8},
location = {Atlantic City, New Jersey},
series = {AFIPS '68 (Spring)}
}


@article{greenwade93,
    author  = "George D. Greenwade",
    title   = "The {C}omprehensive {T}ex {A}rchive {N}etwork ({CTAN})",
    year    = "1993",
    journal = "TUGBoat",
    volume  = "14",
    number  = "3",
    pages   = "342--351"
}


@inproceedings{woodruff2005geometric,
    title={A geometric approach to information-theoretic private information retrieval},
    author={Woodruff, David and Yekhanin, Sergey},
    booktitle={20th Annual IEEE Conference on Computational Complexity (CCC'05)},
    pages={275--284},
    year={2005},
    organization={IEEE}
}

@article{dvir20162,
    title={2-server PIR with subpolynomial communication},
    author={Dvir, Zeev and Gopi, Sivakanth},
    journal={Journal of the ACM (JACM)},
    volume={63},
    number={4},
    pages={1--15},
    year={2016},
    publisher={ACM New York, NY, USA}
}

@article{dvir2011matching,
    title={Matching vector codes},
    author={Dvir, Zeev and Gopalan, Parikshit and Yekhanin, Sergey},
    journal={SIAM Journal on Computing},
    volume={40},
    number={4},
    pages={1154--1178},
    year={2011},
    publisher={SIAM}
}

@article{chor1998private,
    title={Private information retrieval},
    author={Chor, Benny and Kushilevitz, Eyal and Goldreich, Oded and Sudan, Madhu},
    journal={Journal of the ACM (JACM)},
    volume={45},
    number={6},
    pages={965--981},
    year={1998},
    publisher={ACM New York, NY, USA}
}

@article{Gro,
    title={Superpolynomial size set-systems with restricted intersections mod 6 and explicit Ramsey graphs},
    author={Grolmusz, Vince},
    journal={Combinatorica},
    volume={20},
    number={1},
    pages={71--86},
    year={2000},
    publisher={Springer}
}

@article{Yek,
    title={Locally decodable codes},
    author={Yekhanin, Sergey and others},
    journal={Foundations and Trends{\textregistered} in Theoretical Computer Science},
    volume={6},
    number={3},
    pages={139--255},
    year={2012},
    publisher={Now Publishers, Inc.}
}

%% This BibTeX bibliography file was created using BibDesk.
%% https://bibdesk.sourceforge.io/

%% Created for Justin Zhang at 2024-01-22 16:12:04 -0500 


%% Saved with string encoding Unicode (UTF-8) 



@inproceedings{WdW05,
    abstract = {We prove new lower bounds for locally decodable codes and private information retrieval. We show that a 2-query LDC encoding n-bit strings over an ℓ-bit alphabet, where the decoder only uses b bits of each queried position, needs code length {\$}m=exp{\backslash}left({\backslash}Omega{\backslash}left({\backslash}frac{\{}n{\}}{\{}2^{\{}b{\}}{\{}{\backslash}sum{\_}{\{}i=0{\}}^{\{}b{\}}{\}}(^{\{}l{\}}{\_}{\{}i{\}}){\}}{\backslash}right){\backslash}right){\$}},
address = {Berlin, Heidelberg},
author = {Wehner, Stephanie and de Wolf, Ronald},
booktitle = {Automata, Languages and Programming},
date-added = {2024-01-22 16:07:50 -0500},
date-modified = {2024-01-22 16:08:26 -0500},
editor = {Caires, Lu{\'\i}s and Italiano, Giuseppe F. and Monteiro, Lu{\'\i}s and Palamidessi, Catuscia and Yung, Moti},
isbn = {978-3-540-31691-6},
pages = {1424--1436},
publisher = {Springer Berlin Heidelberg},
title = {Improved Lower Bounds for Locally Decodable Codes and Private Information Retrieval},
year = {2005}}


@inproceedings{spiral,
    author     = {Samir Jordan Menon and David J. Wu},
    title      = {\textsc{Spiral}: Fast, High-Rate Single-Server {PIR} via {FHE} Composition},
    booktitle  = {{IEEE} {S\&P}},
    year       = {2022}
}

@misc{simplepir,
    author = {Alexandra Henzinger and Matthew M. Hong and Henry Corrigan-Gibbs and Sarah Meiklejohn and Vinod Vaikuntanathan},
    title = {One Server for the Price of Two: Simple and Fast Single-Server Private Information Retrieval},
    howpublished = {Cryptology ePrint Archive, Paper 2022/949},
    year = {2022},
    note = {\url{https://eprint.iacr.org/2022/949}},
    url = {https://eprint.iacr.org/2022/949}
}


